DECLARE PLUGIN "tactician_ltac1_tactics_plugin"

{

open Ltac_plugin
open Tacarg

}

TACTIC EXTEND tacticianignore
| [ "tactician" "ignore" tactic1(t) ] ->
  { Tactician_ltac1_record_plugin.Ltacrecord.tactician_ignore (Tacinterp.tactic_of_value ist t) }
END

TACTIC EXTEND search
| [ "ml_search" ] ->   { Tactician_ltac1_record_plugin.Ltacrecord.userSearch }
END

VERNAC COMMAND EXTEND TacticianSuggest CLASSIFIED AS QUERY STATE proof_query
| [ "Suggest" ]
  -> { fun ~pstate -> let _ = Proof.run_tactic (Global.env ())
         Tactician_ltac1_record_plugin.Ltacrecord.userPredict (Proof_global.get_proof pstate) in () }
END

VERNAC COMMAND EXTEND TacticianStart CLASSIFIED AS SIDEFF
| [ "Tactician" "Start" ]
  -> { Tactician_ltac1_record_plugin.Ltacrecord.global_record := true }
END

VERNAC COMMAND EXTEND TacticianStop CLASSIFIED AS SIDEFF
| [ "Tactician" "Stop" ]
  -> { Tactician_ltac1_record_plugin.Ltacrecord.global_record := false }
END